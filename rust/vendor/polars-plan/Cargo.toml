# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "polars-plan"
version = "0.32.1"
authors = ["Ritchie Vink <ritchie46@gmail.com>"]
description = "Lazy query engine for the Polars DataFrame library"
homepage = "https://www.pola.rs/"
license = "MIT"
repository = "https://github.com/pola-rs/polars"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]
doctest = false

[dependencies.ahash]
version = "0.8"

[dependencies.arrow]
version = "0.17.4"
features = [
    "compute_aggregate",
    "compute_arithmetics",
    "compute_boolean",
    "compute_boolean_kleene",
    "compute_cast",
    "compute_comparison",
    "compute_concatenate",
    "compute_filter",
    "compute_if_then_else",
]
default-features = false
package = "arrow2"

[dependencies.chrono]
version = "0.4"
features = ["std"]
optional = true
default-features = false

[dependencies.chrono-tz]
version = "0.8.1"
optional = true

[dependencies.ciborium]
version = "0.2"
optional = true

[dependencies.futures]
version = "0.3.25"
optional = true

[dependencies.once_cell]
version = "1"

[dependencies.polars-arrow]
version = "0.32.1"

[dependencies.polars-core]
version = "0.32.1"
features = [
    "lazy",
    "zip_with",
    "random",
]
default-features = false

[dependencies.polars-io]
version = "0.32.1"
features = [
    "lazy",
    "csv",
]
default-features = false

[dependencies.polars-ops]
version = "0.32.1"
default-features = false

[dependencies.polars-time]
version = "0.32.1"
optional = true

[dependencies.polars-utils]
version = "0.32.1"

[dependencies.pyo3]
version = "0.19"
optional = true

[dependencies.rayon]
version = "1.6"

[dependencies.regex]
version = "1.7.1"
optional = true

[dependencies.serde]
version = "1.0.160"
features = [
    "derive",
    "rc",
]
optional = true

[dependencies.smartstring]
version = "1"

[dependencies.strum_macros]
version = "0.25"

[build-dependencies.version_check]
version = "0.9.4"

[features]
abs = ["polars-core/abs"]
approx_unique = ["polars-ops/approx_unique"]
arg_where = []
asof_join = [
    "polars-core/asof_join",
    "polars-time",
    "polars-ops/asof_join",
]
async = ["polars-io/cloud"]
bigidx = [
    "polars-arrow/bigidx",
    "polars-core/bigidx",
    "polars-utils/bigidx",
]
binary_encoding = ["polars-ops/binary_encoding"]
chunked_ids = ["polars-core/chunked_ids"]
coalesce = []
compile = []
concat_str = ["polars-core/concat_str"]
cross_join = ["polars-core/cross_join"]
cse = []
csv = ["polars-io/csv"]
cum_agg = ["polars-core/cum_agg"]
cutqcut = ["polars-ops/cutqcut"]
date_offset = [
    "polars-time",
    "chrono",
]
debugging = []
default = ["compile"]
diff = [
    "polars-core/diff",
    "polars-ops/diff",
]
dot_diagram = []
dtype-array = [
    "polars-core/dtype-array",
    "polars-ops/dtype-array",
]
dtype-categorical = ["polars-core/dtype-categorical"]
dtype-date = [
    "polars-core/dtype-date",
    "polars-time/dtype-date",
    "temporal",
]
dtype-datetime = [
    "polars-core/dtype-datetime",
    "polars-time/dtype-datetime",
    "temporal",
]
dtype-decimal = ["polars-core/dtype-decimal"]
dtype-duration = [
    "polars-core/dtype-duration",
    "polars-time/dtype-duration",
    "temporal",
]
dtype-i16 = ["polars-core/dtype-i16"]
dtype-i8 = ["polars-core/dtype-i8"]
dtype-struct = ["polars-core/dtype-struct"]
dtype-time = [
    "polars-core/dtype-time",
    "polars-time/dtype-time",
]
dtype-u16 = ["polars-core/dtype-u16"]
dtype-u8 = ["polars-core/dtype-u8"]
dynamic_groupby = ["polars-core/dynamic_groupby"]
ewma = ["polars-core/ewma"]
extract_groups = [
    "regex",
    "dtype-struct",
    "polars-ops/extract_groups",
]
extract_jsonpath = ["polars-ops/extract_jsonpath"]
fmt = ["polars-core/fmt"]
fused = ["polars-ops/fused"]
future = []
interpolate = ["polars-ops/interpolate"]
ipc = ["polars-io/ipc"]
is_first = [
    "polars-core/is_first",
    "polars-ops/is_first",
]
is_in = ["polars-core/is_in"]
is_unique = ["polars-ops/is_unique"]
json = ["polars-io/json"]
list_any_all = ["polars-ops/list_any_all"]
list_count = ["polars-ops/list_count"]
list_sets = ["polars-ops/list_sets"]
list_take = ["polars-ops/list_take"]
list_to_struct = ["polars-ops/list_to_struct"]
log = ["polars-ops/log"]
merge_sorted = ["polars-ops/merge_sorted"]
meta = []
mode = ["polars-core/mode"]
moment = [
    "polars-core/moment",
    "polars-ops/moment",
]
nightly = [
    "polars-utils/nightly",
    "polars-ops/nightly",
]
object = ["polars-core/object"]
panic_on_schema = []
parquet = [
    "polars-core/parquet",
    "polars-io/parquet",
]
pct_change = ["polars-core/pct_change"]
pivot = [
    "polars-core/rows",
    "polars-ops/pivot",
]
propagate_nans = ["polars-ops/propagate_nans"]
python = [
    "dep:pyo3",
    "ciborium",
]
random = ["polars-core/random"]
range = []
rank = ["polars-core/rank"]
repeat_by = ["polars-core/repeat_by"]
rle = ["polars-ops/rle"]
rolling_window = [
    "polars-core/rolling_window",
    "polars-time/rolling_window",
    "polars-ops/rolling_window",
    "polars-time/rolling_window",
]
round_series = ["polars-core/round_series"]
row_hash = [
    "polars-core/row_hash",
    "polars-ops/hash",
]
search_sorted = ["polars-ops/search_sorted"]
semi_anti_join = [
    "polars-core/semi_anti_join",
    "polars-ops/semi_anti_join",
]
serde = [
    "dep:serde",
    "polars-core/serde-lazy",
    "polars-time/serde",
    "polars-io/serde",
    "polars-ops/serde",
]
sign = []
streaming = []
string_from_radix = ["polars-ops/string_from_radix"]
string_justify = ["polars-ops/string_justify"]
strings = [
    "polars-core/strings",
    "polars-ops/strings",
]
temporal = [
    "polars-core/temporal",
    "dtype-date",
    "dtype-datetime",
    "dtype-time",
]
timezones = [
    "chrono-tz",
    "polars-time/timezones",
    "polars-core/timezones",
    "regex",
]
top_k = ["polars-ops/top_k"]
trigonometry = []
true_div = []
unique_counts = ["polars-core/unique_counts"]
