# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "polars-plan"
version = "0.40.0"
authors = ["Ritchie Vink <ritchie46@gmail.com>"]
build = "build.rs"
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Lazy query engine for the Polars DataFrame library"
homepage = "https://www.pola.rs/"
readme = "README.md"
license = "MIT"
repository = "https://github.com/pola-rs/polars"

[package.metadata.docs.rs]
features = [
    "approx_n_unique",
    "temporal",
    "serde",
    "rolling_window",
    "rolling_window_by",
    "timezones",
    "dtype-date",
    "extract_groups",
    "dtype-datetime",
    "asof_join",
    "dtype-duration",
    "is_first_distinct",
    "pivot",
    "dtype-array",
    "is_last_distinct",
    "dtype-time",
    "array_any_all",
    "date_offset",
    "parquet",
    "strings",
    "row_hash",
    "json",
    "python",
    "cloud",
    "string_to_integer",
    "list_any_all",
    "pct_change",
    "list_gather",
    "dtype-i16",
    "round_series",
    "cutqcut",
    "async",
    "ewma",
    "ewma_by",
    "random",
    "chunked_ids",
    "repeat_by",
    "is_in",
    "log",
    "string_reverse",
    "list_sets",
    "propagate_nans",
    "mode",
    "rank",
    "hist",
    "object",
    "approx_unique",
    "dtype-categorical",
    "merge_sorted",
    "bigidx",
    "cov",
    "list_sample",
    "dtype-i8",
    "fused",
    "binary_encoding",
    "list_drop_nulls",
    "fmt",
    "list_to_struct",
    "string_pad",
    "diff",
    "rle",
    "is_unique",
    "find_many",
    "string_encoding",
    "ipc",
    "search_sorted",
    "unique_counts",
    "dtype-u8",
    "dtype-struct",
    "peaks",
    "abs",
    "interpolate",
    "list_count",
    "cum_agg",
    "top_k",
    "moment",
    "semi_anti_join",
    "replace",
    "dtype-u16",
    "regex",
    "ciborium",
    "dtype-decimal",
    "arg_where",
    "business",
    "range",
    "meta",
    "hive_partitions",
    "concat_str",
    "coalesce",
    "dot_diagram",
    "trigonometry",
    "streaming",
    "true_div",
    "sign",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]
name = "polars_plan"
path = "src/lib.rs"
doctest = false

[dependencies.ahash]
version = ">=0.8.5"

[dependencies.arrow]
version = "0.40.0"
features = [
    "compute_aggregate",
    "compute_arithmetics",
    "compute_bitwise",
    "compute_boolean",
    "compute_boolean_kleene",
    "compute_cast",
    "compute_comparison",
]
default-features = false
package = "polars-arrow"

[dependencies.bytemuck]
version = "1.11"
features = [
    "derive",
    "extern_crate_alloc",
]

[dependencies.chrono]
version = "0.4.31"
features = ["std"]
optional = true
default-features = false

[dependencies.chrono-tz]
version = "0.8.1"
optional = true

[dependencies.ciborium]
version = "0.2"
optional = true

[dependencies.either]
version = "1.11"

[dependencies.futures]
version = "0.3.25"
optional = true

[dependencies.hashbrown]
version = "0.14"
features = [
    "rayon",
    "ahash",
    "serde",
]

[dependencies.libloading]
version = "0.8.0"
optional = true

[dependencies.once_cell]
version = "1"

[dependencies.percent-encoding]
version = "2.3"

[dependencies.polars-core]
version = "0.40.0"
features = [
    "lazy",
    "zip_with",
    "random",
]
default-features = false

[dependencies.polars-ffi]
version = "0.40.0"
optional = true
default-features = false

[dependencies.polars-io]
version = "0.40.0"
features = ["lazy"]
default-features = false

[dependencies.polars-json]
version = "0.40.0"
optional = true
default-features = false

[dependencies.polars-ops]
version = "0.40.0"
features = []
default-features = false

[dependencies.polars-parquet]
version = "0.40.0"
optional = true
default-features = false

[dependencies.polars-time]
version = "0.40.0"
optional = true
default-features = false

[dependencies.polars-utils]
version = "0.40.0"
default-features = false

[dependencies.pyo3]
version = "0.21"
optional = true

[dependencies.rayon]
version = "1.9"

[dependencies.recursive]
version = "0.1"

[dependencies.regex]
version = "1.9"
optional = true

[dependencies.serde]
version = "1.0.188"
features = [
    "derive",
    "rc",
]
optional = true

[dependencies.smartstring]
version = "1"

[dependencies.strum_macros]
version = "0.26"

[build-dependencies.version_check]
version = "0.9.4"

[features]
abs = ["polars-ops/abs"]
approx_unique = ["polars-ops/approx_unique"]
arg_where = []
array_any_all = [
    "polars-ops/array_any_all",
    "dtype-array",
]
array_count = [
    "polars-ops/array_count",
    "dtype-array",
]
array_to_struct = ["polars-ops/array_to_struct"]
asof_join = [
    "polars-time",
    "polars-ops/asof_join",
]
async = [
    "polars-io/async",
    "futures",
]
bigidx = ["polars-core/bigidx"]
binary_encoding = ["polars-ops/binary_encoding"]
business = ["polars-ops/business"]
chunked_ids = []
cloud = [
    "async",
    "polars-io/cloud",
]
coalesce = []
concat_str = []
cov = ["polars-ops/cov"]
cross_join = ["polars-ops/cross_join"]
cse = []
csv = ["polars-io/csv"]
cum_agg = ["polars-ops/cum_agg"]
cutqcut = ["polars-ops/cutqcut"]
date_offset = [
    "polars-time",
    "chrono",
]
debugging = []
diff = ["polars-ops/diff"]
dot_diagram = []
dtype-array = [
    "polars-core/dtype-array",
    "polars-ops/dtype-array",
]
dtype-categorical = ["polars-core/dtype-categorical"]
dtype-date = [
    "polars-time/dtype-date",
    "temporal",
]
dtype-datetime = [
    "polars-time/dtype-datetime",
    "temporal",
]
dtype-decimal = ["polars-core/dtype-decimal"]
dtype-duration = [
    "polars-core/dtype-duration",
    "polars-time/dtype-duration",
    "temporal",
]
dtype-i16 = ["polars-core/dtype-i16"]
dtype-i8 = ["polars-core/dtype-i8"]
dtype-struct = ["polars-core/dtype-struct"]
dtype-time = [
    "polars-time/dtype-time",
    "temporal",
]
dtype-u16 = ["polars-core/dtype-u16"]
dtype-u8 = ["polars-core/dtype-u8"]
dynamic_group_by = ["polars-core/dynamic_group_by"]
ewma = ["polars-ops/ewma"]
ewma_by = ["polars-ops/ewma_by"]
extract_groups = [
    "regex",
    "dtype-struct",
    "polars-ops/extract_groups",
]
extract_jsonpath = ["polars-ops/extract_jsonpath"]
ffi_plugin = [
    "libloading",
    "polars-ffi",
]
find_many = ["polars-ops/find_many"]
fmt = ["polars-core/fmt"]
fused = ["polars-ops/fused"]
future = []
hist = ["polars-ops/hist"]
hive_partitions = []
interpolate = ["polars-ops/interpolate"]
ipc = ["polars-io/ipc"]
is_between = ["polars-ops/is_between"]
is_first_distinct = [
    "polars-core/is_first_distinct",
    "polars-ops/is_first_distinct",
]
is_in = ["polars-ops/is_in"]
is_last_distinct = [
    "polars-core/is_last_distinct",
    "polars-ops/is_last_distinct",
]
is_unique = ["polars-ops/is_unique"]
json = [
    "polars-io/json",
    "polars-json",
]
list_any_all = ["polars-ops/list_any_all"]
list_count = ["polars-ops/list_count"]
list_drop_nulls = ["polars-ops/list_drop_nulls"]
list_gather = ["polars-ops/list_gather"]
list_sample = ["polars-ops/list_sample"]
list_sets = ["polars-ops/list_sets"]
list_to_struct = ["polars-ops/list_to_struct"]
log = ["polars-ops/log"]
merge_sorted = ["polars-ops/merge_sorted"]
meta = []
mode = ["polars-ops/mode"]
moment = ["polars-ops/moment"]
nightly = [
    "polars-utils/nightly",
    "polars-ops/nightly",
]
object = ["polars-core/object"]
panic_on_schema = []
parquet = [
    "polars-io/parquet",
    "polars-parquet",
]
pct_change = ["polars-ops/pct_change"]
peaks = ["polars-ops/peaks"]
pivot = [
    "polars-core/rows",
    "polars-ops/pivot",
]
propagate_nans = ["polars-ops/propagate_nans"]
python = [
    "dep:pyo3",
    "ciborium",
]
random = ["polars-core/random"]
range = []
rank = ["polars-ops/rank"]
reinterpret = [
    "polars-core/reinterpret",
    "polars-ops/reinterpret",
]
repeat_by = ["polars-ops/repeat_by"]
replace = ["polars-ops/replace"]
rle = ["polars-ops/rle"]
rolling_window = [
    "polars-core/rolling_window",
    "polars-time/rolling_window",
    "polars-ops/rolling_window",
]
rolling_window_by = [
    "polars-core/rolling_window_by",
    "polars-time/rolling_window_by",
    "polars-ops/rolling_window_by",
]
round_series = ["polars-ops/round_series"]
row_hash = [
    "polars-core/row_hash",
    "polars-ops/hash",
]
search_sorted = ["polars-ops/search_sorted"]
semi_anti_join = ["polars-ops/semi_anti_join"]
serde = [
    "dep:serde",
    "polars-core/serde-lazy",
    "polars-time/serde",
    "polars-io/serde",
    "polars-ops/serde",
    "either/serde",
]
sign = []
streaming = []
string_encoding = ["polars-ops/string_encoding"]
string_pad = ["polars-ops/string_pad"]
string_reverse = ["polars-ops/string_reverse"]
string_to_integer = ["polars-ops/string_to_integer"]
strings = [
    "polars-core/strings",
    "polars-ops/strings",
]
temporal = [
    "polars-core/temporal",
    "polars-core/dtype-date",
    "polars-core/dtype-datetime",
    "polars-core/dtype-time",
    "polars-core/dtype-i8",
    "polars-core/dtype-i16",
]
timezones = [
    "chrono-tz",
    "polars-time/timezones",
    "polars-core/timezones",
    "regex",
]
top_k = ["polars-ops/top_k"]
trigonometry = []
true_div = []
unique_counts = ["polars-ops/unique_counts"]
