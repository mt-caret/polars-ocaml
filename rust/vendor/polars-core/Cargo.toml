# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "polars-core"
version = "0.32.1"
authors = ["Ritchie Vink <ritchie46@gmail.com>"]
description = "Core of the Polars DataFrame library"
homepage = "https://www.pola.rs/"
readme = "README.md"
license = "MIT"
repository = "https://github.com/pola-rs/polars"

[package.metadata.docs.rs]
features = ["docs-selection"]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[dependencies.ahash]
version = "0.8"

[dependencies.arrow]
version = "0.17.4"
features = [
    "compute_aggregate",
    "compute_arithmetics",
    "compute_boolean",
    "compute_boolean_kleene",
    "compute_cast",
    "compute_comparison",
    "compute_concatenate",
    "compute_filter",
    "compute_if_then_else",
]
default-features = false
package = "arrow2"

[dependencies.bitflags]
version = "2"

[dependencies.chrono]
version = "0.4"
features = ["std"]
optional = true
default-features = false

[dependencies.chrono-tz]
version = "0.8.1"
optional = true

[dependencies.comfy-table]
version = "7.0.1"
optional = true
default_features = false

[dependencies.either]
version = "1.8"

[dependencies.hashbrown]
version = "0.14"
features = [
    "rayon",
    "ahash",
]

[dependencies.indexmap]
version = "2"
features = ["std"]

[dependencies.itoap]
version = "1"
features = ["simd"]
optional = true

[dependencies.ndarray]
version = "0.15"
optional = true
default_features = false

[dependencies.num-traits]
version = "0.2"

[dependencies.object_store]
version = "0.6"
optional = true
default-features = false

[dependencies.once_cell]
version = "1"

[dependencies.polars-arrow]
version = "0.32.1"
features = ["compute"]

[dependencies.polars-error]
version = "0.32.1"

[dependencies.polars-row]
version = "0.32.1"

[dependencies.polars-utils]
version = "0.32.1"

[dependencies.rand]
version = "0.8"
features = [
    "small_rng",
    "std",
]
optional = true

[dependencies.rand_distr]
version = "0.4"
optional = true

[dependencies.rayon]
version = "1.6"

[dependencies.regex]
version = "1.7.1"
optional = true

[dependencies.serde]
version = "1.0.160"
features = ["derive"]
optional = true

[dependencies.serde_json]
version = "1"
optional = true

[dependencies.smartstring]
version = "1"

[dependencies.thiserror]
version = "1"

[dependencies.url]
version = "2.3.1"
optional = true

[dependencies.xxhash-rust]
version = "0.8.6"
features = ["xxh3"]

[dev-dependencies.bincode]
version = "1"

[dev-dependencies.serde_json]
version = "1"

[build-dependencies.version_check]
version = "0.9.4"

[features]
abs = []
asof_join = []
async = ["url"]
avx512 = []
aws = [
    "async",
    "object_store/aws",
]
azure = [
    "async",
    "object_store/azure",
]
bigidx = ["polars-arrow/bigidx"]
checked_arithmetic = []
chunked_ids = []
concat_str = []
cross_join = []
cum_agg = []
dataframe_arithmetic = []
default = [
    "docs",
    "temporal",
]
describe = []
diagonal_concat = []
diff = []
docs = []
docs-selection = [
    "ndarray",
    "is_in",
    "rows",
    "docs",
    "strings",
    "object",
    "lazy",
    "temporal",
    "random",
    "zip_with",
    "round_series",
    "checked_arithmetic",
    "repeat_by",
    "is_first",
    "is_last",
    "asof_join",
    "cross_join",
    "dot_product",
    "concat_str",
    "row_hash",
    "mode",
    "cum_agg",
    "rolling_window",
    "diff",
    "moment",
    "dtype-categorical",
    "dtype-decimal",
    "rank",
    "diagonal_concat",
    "horizontal_concat",
    "abs",
    "dataframe_arithmetic",
    "product",
    "unique_counts",
    "describe",
    "chunked_ids",
    "semi_anti_join",
    "partition_by",
]
dot_product = []
dtype-array = ["polars-arrow/dtype-array"]
dtype-categorical = []
dtype-date = ["temporal"]
dtype-datetime = ["temporal"]
dtype-decimal = [
    "dep:itoap",
    "polars-arrow/dtype-decimal",
]
dtype-duration = ["temporal"]
dtype-i16 = []
dtype-i8 = []
dtype-struct = []
dtype-time = ["temporal"]
dtype-u16 = []
dtype-u8 = []
dynamic_groupby = [
    "dtype-datetime",
    "dtype-date",
]
ewma = []
fmt = ["comfy-table/tty"]
fmt_no_tty = ["comfy-table"]
gcp = [
    "async",
    "object_store/gcp",
]
groupby_list = []
horizontal_concat = []
is_first = []
is_in = []
is_last = []
lazy = []
mode = []
moment = []
nightly = [
    "simd",
    "hashbrown/nightly",
    "polars-utils/nightly",
    "polars-arrow/nightly",
]
object = ["serde_json"]
parquet = ["arrow/io_parquet"]
partition_by = []
pct_change = ["diff"]
performant = ["polars-arrow/performant"]
product = []
python = []
random = [
    "rand",
    "rand_distr",
]
rank = []
reinterpret = []
repeat_by = []
rolling_window = []
round_series = []
row_hash = []
rows = []
semi_anti_join = []
serde = [
    "dep:serde",
    "smartstring/serde",
    "bitflags/serde",
]
serde-lazy = [
    "serde",
    "polars-arrow/serde",
    "indexmap/serde",
    "smartstring/serde",
    "chrono/serde",
]
simd = [
    "arrow/simd",
    "polars-arrow/simd",
]
sort_multiple = []
strings = [
    "regex",
    "polars-arrow/strings",
    "arrow/compute_substring",
    "polars-error/regex",
]
take_opt_iter = []
temporal = [
    "regex",
    "chrono",
    "polars-error/regex",
]
timezones = [
    "chrono-tz",
    "arrow/chrono-tz",
    "polars-arrow/timezones",
]
unique_counts = []
zip_with = []
